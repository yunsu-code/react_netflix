// ===== 말줄임 //
@mixin ellipsis($line: 1) {
    display: -webkit-box;
    white-space: normal;
    overflow: hidden;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
}

// ===== clearfix //
@mixin clear {
    &::after {
        content: "";
        display: block;
        clear: both;
    }
}

// ===== background img //
@mixin bg ($url, $x, $y, $width:100%, $height:100%) {
    background-image: url($url);
    background-position: ($x) ($y);
    background-size: $width $height;
}

// ===== 텍스트 그림자 //
@mixin tt_shadow {text-shadow: 2px 2px 4px rgba(0, 0, 0, 4.5);}

// ===== transition위한 숨김, 보임 처리 //
@mixin hidden {visibility: hidden; opacity: 0;}
@mixin visible {visibility: visible; opacity: 1;}

// ===== 반응형 //
$breakpoints: (ll: 1240px, lg: 1024px, md: 768px, sm: 500px, xs: 400px) ;

@mixin mq ($max: null) {
    $max-type: type-of($max);

    @if $max-type==string {
        @if $max==xs {
            $max: "(max-width: #{map-get($breakpoints, xs) - 1})";
        }
        @else if $max==sm {
            $max: "(max-width: #{map-get($breakpoints, sm) - 1})";
        }
        @else if $max==md {
            $max: "(max-width: #{map-get($breakpoints, md) - 1})";
        }
        @else if $max==lg {
            $max: "(max-width: #{map-get($breakpoints, lg) - 1})";
        }
        @else if $max==ll {
            $max: "(max-width: #{map-get($breakpoints, ll) - 1})";
        }
        @else {
            @warn "mq mixin supports: xs, sm, md, lg, ll";
        }
    }
    @else if $max-type==number {
        $max: "(max-width: #{$max})";
    }

    $query: false;
    @if $max {
        $query: "#{$max}";
    }
    @if (not $query) {
        @warn "Invalid media query";
    }
    @else {
        @media #{$query} {
            @content;
        }
    }
}